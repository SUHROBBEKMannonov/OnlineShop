@using OnlineShop.Models
@model IEnumerable<OnlineShop.Models.Products>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["title"] = "Index";
}
<br />
<br />
<div class="row">
        <div class="col-6">
                <h2 class="text-info">Product  List</h2>
        </div>
        <div class="col-6 text-right">
            <a asp-action="Create" class="btn btn-info" ><i class="bi bi-plus-square"></i>  &nbsp  Add New Product</a>
        </div>
</div>
<form method="post">
        <div class="row">
            <div class="col-3">
                <input type="text" placeholder="Low Amount" class="form-control" name="lowAmount"/>
            </div>
        <div class="col-3">
            <input type="text" placeholder="Large Amount" class="form-control" name="largeAmount" />
        </div>
        <div class="col-3">
            <input type="submit" class="btn btn-success" name="Search" />
            <a asp-action="Index" class="btn btn-secondary ml-3">Show all</a>
        </div>
        <div class="col-3 row">
           
        </div>
            <div class="col-3"></div>
        </div>

</form>

<br />
<div>
          <table class="table table-striped border" id="example">
                <thead>
                    <tr class="table-info">
                    <th>
                        @Html.DisplayNameFor(expression:c=>c.Name)
                    </th>
                        <th>
                        @Html.DisplayNameFor(expression:c=>c.Price)
                    </th>
                        <th>
                        @Html.DisplayNameFor(expression:c=>c.ProductColor)
                    </th>
                       <th>
                        @Html.DisplayNameFor(expression:c=>c.IsAvailable)
                    </th>
                         <th>
                        @Html.DisplayNameFor(expression:c=>c.ProductTypeId)
                    </th>
                       <th>
                        @Html.DisplayNameFor(expression:c=>c.SpecialTagID)
                    </th>
                        <th>
                        @Html.DisplayNameFor(expression:c=>c.Image)
                    </th>
                    <th></th>
                    <th></th>
             </tr>
                </thead>
                <tbody>
                      @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>@item.ProductColor</td>
                    <td>@item.IsAvailable</td>
                    <td>@item.ProductTypes.ProductType</td>
                    <td>@item.SpecialTag.Name</td>
                    <td><img src="~/@item.Image" height="70px" /></td>
                    <td>
                        <partial name="_ButtonPartialProducts" model="@item.Id"/>
                    </td>
                </tr>
            }
                </tbody>
               
          </table>

</div


@section scripts{
    

	@{
		await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial");
	}
	}