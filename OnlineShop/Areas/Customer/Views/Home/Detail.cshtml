@model OnlineShop.Models.Products
@{
	ViewData["Title"] = "Details";
}

@using OnlineShop.Utility
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{



	List<Products> products = HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
	Products product = null;
	if(products !=null){
		product = products.FirstOrDefault(c => c.Id == Model.Id);
	}
    
}






<br />
<h2 class="text-info">Product Details</h2>
<form asp-action="Detail" method="post" enctype="multipart/form-data">
	<div class="p-4	 rounded border row">
			<div asp-validation-summary="ModelOnly" class="text-danger">	</div>
				<div class="col-8">
			<div class="from-group row mb-3">
				<div class="col-4 ">
					<input type="hidden"  asp-for="Id" />
					<label asp-for="Name"></label>
				</div>
				<div class="col-8">
					<input asp-for="Name" readonly="readonly" class="form-control" />
				</div>
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>
			<div class="from-group row mb-3">
				<div class="col-4">
					<label asp-for="Price"></label>
				</div>
				<div class="col-8">
					<input asp-for="Price"  disabled="disabledx" class="form-control" />
				</div>
				<span asp-validation-for="Price" class="text-danger"></span>
			</div>
	@*	<div class="from-group row">
				<div class="col-4">
					<label asp-for="Image"></label>
				</div>
				<div class="col-8">
					<input asp-for="Image" class="form-control" type="File" />
				</div>
				<span asp-validation-for="Image" class="text-danger"></span>
			</div>*@
			<div class="from-group row mb-3">
				<div class="col-4">
					<label asp-for="ProductColor"></label>
				</div>
				<div class="col-8">
					<input asp-for="ProductColor" disabled="disabled" class="form-control" />
				</div>
				<span asp-validation-for="ProductColor" class="text-danger"></span>
			</div>
			<div class="from-group row mb-3">
				<div class="col-4">
					<label asp-for="ProductTypeId"></label>
				</div>
				<div class="col-8">
					<input asp-for="ProductTypes.ProductType" readonly="readonly" class="form-control" />
					@*<select asp-for="ProductTypeId" asp-items="ViewBag.productTypeId" class="form-control"></select>*@
				</div>
				<span asp-validation-for="ProductTypeId" class="text-danger"></span>
			</div>
			<div class="from-group row mb-3">
				<div class="col-4">
					<label asp-for="SpecialTagID"></label>
				</div>
				<div class="col-8">
					<input asp-for="SpecialTag.Name" readonly="readonly" class="form-control" />
					@*<select asp-for="SpecialTagID" asp-items="ViewBag.TagId" class="form-control"></select>*@
				</div>
				<span asp-validation-for="SpecialTagID" class="text-danger"></span>
			</div>
			<div class="form-group row mb-3">
				<div class="col-4">
					
				</div>
				<div class="col-8">
					@if (product != null) { 
					<button type="submit" asp-action="Remove" asp-route-id="@Model.Id" class="btn btn-danger form-control ">Remove</button>
					}
					else{
						<input type="submit" class="btn btn-info form-control " value="Add to Cart" />
					}
				</div>
			</div>
			<div class="form-group">
				<a asp-action="Index" class="btn btn-secondary">Back to List</a>
			</div>
			</div>
				<div class="col-1">	</div>
				<div class="col-3">
			<img src="~/@Model.Image" width="100%" height="250px" style="border-radius: 5px; border: 1px solid #efefef" />
				@if(@Model.IsAvailable){
					<img src="~/images/instock.png" width="200px" height="80px" />
				}
				else{
					<img  src="~/images/outofstock.png"   width="200px" height="80px" />
				}
				</div>
				
			
	</div>
</form>
@section Scripts{
	@{await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial");}
}